import a
import foo as c
import cookie-parser as cookieParser
import models.users
import .models.users1
import ../models/users3
import ../../models/users4
import hbs!templates
import hbs!templates/SomeViewTemplate.lol as lal
import models: User, Group, Permission
import models: User1

humbug = {
    a: 1,
    b: 2,
    c: 3,
}
icecream = {
    r2d2: 1
    c3po: 2
    clear: 3
}

reg = /(!\/)/.test('hi there')

try
    blabla
catch e
    hummm

continuer = 1
breaker = 1
passer = 1

data = [
    true,
    false,
    null,
    1, 2, 3, 2, 4
]
a = (1*(66-6)*2+1>>3)==5
a = data[6]
a = data.length[6].hey.lol[5]
a[3] = 12
@a[3]
lol = @a

b = 1
b *= 2

if a
    c = 3
    if a > 5
        car = 3
    else
        car = 5
    car = 1
    if 9 and 10 or 2
        pass

else
    111
for i, a in data
    666
    if b
        break
    else
        continue

# This is a comment
for a in data
    f()

for x in 0:3:1
    a

while b > 2
    b -= 1

class Animal
    a: (a) ->
        return @
    lol: 1
    c: {
        a: 1,
        b: 2,
    }



a[6] = 1
c = new Animal()
@lol = a
a = "hi!"
b = "this is a
multine string.. wonder how that works!"
s = 'single quoted... with \' escaping as well'

if lala then foo
elif muddy then bar
elif bam then blamo
else kobar

f = (g) -> 'hai'
f = (a, b, c) ->
    a = 1
    b = 2
    c = () ->
        return @@
    return a + 1

a = f(1, 2, 3)
b = ((a, b, c) ->
    1
)()
c = f()

for i, x in f()
    1

class IceCream
    init: (type) ->
        @type = type
    eat: () ->
        return 1
